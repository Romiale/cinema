{"ast":null,"code":"var _jsxFileName = \"/home/user/mon PC/travauxKDA/cinema/src/components/SearchMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchMovie() {\n  _s();\n\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    const fecthMovies = async () => {\n      const fecthFoundMovies = await axios(url);\n      setFoundMovies(fecthFoundMovies);\n    };\n\n    fecthMovies();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(searchContext.provider, {\n    value: foundMovies,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search movie\",\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/blog\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: search,\n            alt: \"search\",\n            onClick: () => setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMovie, \"QRI7sZx8RwxffemqegQpMWqt8XQ=\");\n\n_c = SearchMovie;\nexport default SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/home/user/mon PC/travauxKDA/cinema/src/components/SearchMovie.jsx"],"names":["axios","React","useState","useEffect","SearchMovie","foundMovies","setFoundMovies","query","setQuery","url","setUrl","fecthMovies","fecthFoundMovies","event","target","value","search"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,WAAW,GAAG,YAAY;AAC5B,YAAMC,gBAAgB,GAAG,MAAMZ,KAAK,CAACS,GAAD,CAApC;AACAH,MAAAA,cAAc,CAACM,gBAAD,CAAd;AACH,KAHD;;AAIAD,IAAAA,WAAW;AACd,GANQ,EAMN,CAACF,GAAD,CANM,CAAT;AASA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEJ,WAA/B;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,cAA/B;AAA8C,QAAA,QAAQ,EAAEQ,KAAK,IAAIL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAA,iCAAiB;AAAK,YAAA,GAAG,EAAEC,MAAV;AAAkB,YAAA,GAAG,EAAC,QAAtB;AAA+B,YAAA,OAAO,EAAE,MACrDN,MAAM,CAAE,6CAA4CH,KAAM,EAApD;AADO;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA5BQH,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\nfunction SearchMovie() {\n\n    const [foundMovies, setFoundMovies] = useState([])\n    const [query, setQuery] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n\n\n    useEffect(() => {\n        const fecthMovies = async () => {\n            const fecthFoundMovies = await axios(url)\n            setFoundMovies(fecthFoundMovies)\n        }\n        fecthMovies()\n    }, [url])\n\n\n    return (\n        <searchContext.provider value={foundMovies}>\n            <div>\n                <input type=\"text\" placeholder=\"Search movie\" onChange={event => setQuery(event.target.value)} />\n                <button>\n                    <Link to=\"/blog\"><img src={search} alt=\"search\" onClick={() =>\n                        setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\n                    } /></Link>\n                </button>\n            </div>\n        </searchContext.provider>\n    )\n}\n\nexport default SearchMovie\n"]},"metadata":{},"sourceType":"module"}