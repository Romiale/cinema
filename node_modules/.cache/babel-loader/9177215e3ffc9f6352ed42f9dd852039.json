{"ast":null,"code":"var _jsxFileName = \"/home/user/mon PC/travauxKDA/cinema/src/pages/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../style/movies.module.scss';\nimport heart from \"../icons/heart.svg\";\nimport CardMovie from '../components/CardMovie';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ActionMovies({\n  getMoviesByCategories,\n  MoviesByGenre,\n  genres\n}) {\n  _s();\n\n  const getGenresMovies = (genreId, genreName) => {\n    getMoviesByCategories(genreId);\n    setGenreTitle(genreName);\n  };\n\n  const [genreTitle, setGenreTitle] = useState(\"\");\n  const [treeFirtsMovies, setTreeFirtsMovies] = useState([]);\n  const [moviesToShow, setMoviesToShow] = useState([]);\n  useEffect(() => {\n    setMoviesToShow(MoviesByGenre);\n    let sorted = MoviesByGenre.sort((a, b) => {\n      return b.vote_count - a.vote_count;\n    });\n    setTreeFirtsMovies(sorted.slice(0, 3));\n  }, [MoviesByGenre]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [console.log(treeFirtsMovies), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.parent__presentaion_cards,\n      children: [treeFirtsMovies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n            alt: \"bg\",\n            className: \"w-100 rounded-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: heart,\n                alt: \"heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"m-1\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => getGenresMovies(genre.id, genre.name),\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"nobr\", {\n              children: genre.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 144\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 81\n          }, this)]\n        }, genre.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white mt-5 p-3 header\",\n      children: genreTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Movies__cards__parent,\n      id: \"myHeader\",\n      children: MoviesByGenre.map(Movie => {\n        return /*#__PURE__*/_jsxDEV(CardMovie, {\n          Movie: Movie\n        }, Movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ActionMovies, \"Xja837sPrGKlWAl2K4MReWnp5sE=\");\n\n_c = ActionMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionMovies\");","map":{"version":3,"sources":["/home/user/mon PC/travauxKDA/cinema/src/pages/Movies.jsx"],"names":["React","useState","useEffect","styles","CardMovie","Footer","ActionMovies","getMoviesByCategories","MoviesByGenre","genres","getGenresMovies","genreId","genreName","setGenreTitle","genreTitle","treeFirtsMovies","setTreeFirtsMovies","moviesToShow","setMoviesToShow","sorted","sort","a","b","vote_count","slice","body","console","log","parent__presentaion_cards","map","movie","backdrop_path","title","overview","heart","id","genre","name","Movies__cards__parent","Movie"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../style/movies.module.scss';\nimport heart from '../icons/heart.svg';\nimport CardMovie from '../components/CardMovie';\nimport Footer from '../components/Footer';\n\n\nexport default function ActionMovies({ getMoviesByCategories, MoviesByGenre, genres }) {\n\n    const getGenresMovies = (genreId, genreName) => {\n        getMoviesByCategories(genreId)\n        setGenreTitle(genreName);\n    }\n    const [genreTitle, setGenreTitle] = useState(\"\")\n    const [treeFirtsMovies, setTreeFirtsMovies] = useState([])\n    const [moviesToShow, setMoviesToShow] = useState([])\n\n\n    useEffect(() => {\n        setMoviesToShow(MoviesByGenre)\n\n        let sorted = MoviesByGenre.sort((a, b) => {\n            return b.vote_count - a.vote_count\n        })\n        setTreeFirtsMovies(sorted.slice(0, 3))\n    }, [MoviesByGenre]);\n\n    return (\n        <div className={styles.body}>\n            {\n                console.log(treeFirtsMovies)\n\n            }\n            <div className={styles.parent__presentaion_cards}>\n\n                {\n                    treeFirtsMovies.map(movie => {\n                        return (\n                            <div key={movie.id}>\n                                <img src={\"https://image.tmdb.org/t/p/w500/\" + movie.backdrop_path} alt=\"bg\" className=\"w-100 rounded-2\" />\n                                <div>\n                                    <p>{movie.title}</p>\n                                    <p>{movie.overview}</p>\n                                    <span> <img src={heart} alt=\"heart\" /></span>\n\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n\n                <ul>\n                    {\n                        genres.map(genre => <li key={genre.id} className=\"m-1\"> <button onClick={() => getGenresMovies(genre.id, genre.name)}> <nobr>{genre.name}</nobr></button></li>)\n                    }\n                </ul>\n            </div>\n            <h1 className=\"text-white mt-5 p-3 header\" >{genreTitle}</h1>\n            <div className={styles.Movies__cards__parent} id=\"myHeader\">\n                {\n                    MoviesByGenre.map(Movie => {\n                        return <CardMovie key={Movie.id} Movie={Movie} />\n                    })\n                }\n            </div>\n            <Footer />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}